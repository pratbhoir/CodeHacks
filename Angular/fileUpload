
TEMPLATE

        <form id="profileForm" #profileForm="ngForm" (ngSubmit)="onSaveProfile(profileForm.value)">
                <div class="form-group">
                  <label for="exampleInputEmail1">UserName</label>
                  <input type="text" class="form-control" placeholder="UserName" name="UserName" [(ngModel)]= profile.UserName >
                </div>
                <div class="form-group">
                    <label for="exampleInputEmail1">FirstName</label>
                    <input type="text" class="form-control" placeholder="FirstName" name="FirstName" [(ngModel)]= profile.FirstName >
                  </div>
                <div class="form-group">
                  <label for="exampleInputFile">Profile Pic</label>
                  <input type="file" id="ProfilePicFile" #ProfilePicFile>
                </div>
                <div class="checkbox">
                  <label>
                    <input type="checkbox"  name="IsActive" [(ngModel)] = profile.IsActive > Active
                  </label>
                </div>
                <input type="hidden" name="ProfileId" [(ngModel)] = profile.ProfileId>
                <input type="hidden" name="ACTION_FLAG" [(ngModel)] = profile.ACTION_FLAG>
                <button type="submit" class="btn btn-default">Submit</button>
                <a  class="btn btn-default" (click) = "onCancel()">Cancel</a>
              </form>



Component


import { Component, OnInit,ElementRef } from '@angular/core';


  onSaveProfile(objProfile){
    event.preventDefault();
      //var formData = new FormData($('#profileForm'));
    let files = this.elementRef.nativeElement.querySelector('#ProfilePicFile').files;

      console.log(objProfile);

      let formData:FormData = new FormData();
      formData.append("UserName","PratBhoir");
      formData.append("Email","Pratbhoir@gmail.com");

      formData.append('uploadFile', files[0], files[0].name)
      
      this.profileService.SaveProfile(formData).subscribe((msg)=>{
          console.log(msg);
      });
      

  }


Service


  SaveProfile(ObjProfileModel:FormData){
     //console.log(this.headers);
     this.headers = new Headers();
     let options = new RequestOptions({ headers:this.headers });
     //let abcd:Array<Object>//:any[];
     return this.http  
               .post(this.reqPostUrl ,ObjProfileModel,options )  
               .map(res=>res.json());

  }


WebAPI



        [HttpPost]
        public ResponseMessage SaveProfileDetails()
        {
            try
            {
                string UserName = HttpContext.Current.Request.Params["UserName"];

                ResponseMessage objResponse = new ResponseMessage();
                var httpRequest = HttpContext.Current.Request;
                var foo = httpRequest.Form.ToString();
                var temp = HttpUtility.ParseQueryString(foo);

                //var requestJson =  result.Contents[0].ReadAsString();
                //var request = JsonConvert.DeserializeObject<ProfileModel>(requestJson);

                if (httpRequest.Files.Count > 0)
                {
                    foreach (string file in httpRequest.Files)
                    {
                        var postedFile = httpRequest.Files[file];
                        var filePath = HttpContext.Current.Server.MapPath("~/UploadFile/" + postedFile.FileName);
                        postedFile.SaveAs(filePath);
                    }
                }

                //Objlogin = (LoginModel)SA.GetSession("Login");
                //GetDummyLogin();
                //var xmlDoc = Utilities.GetXmlDocument(ObjProfileModel);
                //ResponseMessage objResponse = ObjProfileModel.SaveProfileDetails(xmlDoc, Objlogin);
                return objResponse;
            }
            catch (Exception ex)
            {
                throw ex;//  return RedirectToAction(CommonConstants.ErrorOccuredAction, CommonConstants.HomeController, new { ErrorMessage = ex.Message });
            }
        }






